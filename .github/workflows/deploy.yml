name: Deploy Nginx Instances

on:
  push:
    branches:
      - main
    paths:
      - '**/*.hcl'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0
          terraform_wrapper: false

      - name: Install Terragrunt
        run: |
          curl -L https://github.com/gruntwork-io/terragrunt/releases/download/v0.55.1/terragrunt_linux_amd64 -o /usr/local/bin/terragrunt
          chmod +x /usr/local/bin/terragrunt
          terragrunt --version     

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Write SSH Key
        run: |
          echo "Writing SSH key to /tmp/ssh_key.pem"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key.pem
          chmod 600 /tmp/ssh_key.pem
          echo "First line of key:"
          head -n 1 /tmp/ssh_key.pem  # Should show -----BEGIN
          echo "File type:"
          file /tmp/ssh_key.pem       # Should show PEM or ASCII text
          echo "Key contents (partial):"
          cat /tmp/ssh_key.pem | head -n 5  # Show start of key for debug

      - name: Deploy and Test Instances
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          if ls live/* >/dev/null 2>&1; then
            for dir in live/*; do
              if [ -f "$dir/terragrunt.hcl" ]; then
                if echo "$CHANGED_FILES" | grep -Fxq "$dir/terragrunt.hcl"; then
                  echo "Deploying $dir (new or changed)..."
                  cd "$dir"
                  pwd
                  terragrunt init -upgrade -no-color --terragrunt-non-interactive || { echo "Init failed"; exit 1; }
                  terragrunt apply -auto-approve -no-color --terragrunt-non-interactive || { echo "Apply failed"; exit 1; }
                  PUBLIC_IP=$(terragrunt output -raw instance_public_ip)
                  NGINX_VERSION=$(grep -oP 'nginx_version\s*=\s*"\K[^"]+' terragrunt.hcl || echo "default")
                  NGINX_PORT=$(grep -oP 'nginx_port\s*=\s*"\K[^"]+' terragrunt.hcl || echo "80")
                  SERVER_NAME=$(grep -oP 'server_name\s*=\s*"\K[^"]+' terragrunt.hcl || echo "localhost")
                  INSTALL_METHOD=$(grep -oP 'install_method\s*=\s*"\K[^"]+' terragrunt.hcl || echo "package")
                  echo "Instance deployed in: $dir"
                  echo "Public IP: $PUBLIC_IP"
                  echo "NGINX Version: $NGINX_VERSION"
                  echo "Nginx Port: $NGINX_PORT"
                  echo "Server Name: $SERVER_NAME"
                  echo "Install Method: $INSTALL_METHOD"
                  echo "Testing instance at $PUBLIC_IP..."
                  chmod +x ../../scripts/test-nginx.sh
                  echo "Test script args: [$NGINX_VERSION] [$NGINX_PORT] [$SERVER_NAME] [$PUBLIC_IP] [/tmp/ssh_key.pem] [$INSTALL_METHOD]"
                  ../../scripts/test-nginx.sh "$NGINX_VERSION" "$NGINX_PORT" "$SERVER_NAME" "$PUBLIC_IP" "/tmp/ssh_key.pem" "$INSTALL_METHOD" || {
                    echo "Tests failed for $dir, retrieving debug logs..."
                    sleep 60  # Increased initial delay for instance boot
                    for i in {1..10}; do
                      ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key.pem ubuntu@$PUBLIC_IP "cat /tmp/user_data.log || echo 'No user_data.log'; cat /tmp/chef_output.txt || echo 'No chef_output.txt'; cat /tmp/nginx_check.txt || echo 'No nginx_check.txt'; cat /tmp/nginx_status.txt || echo 'No nginx_status.txt'" && break
                      echo "SSH attempt $i failed, retrying in 15 seconds..."
                      sleep 15
                    done
                    echo "Destroying instance in $dir..."
                    terragrunt destroy -auto-approve -no-color --terragrunt-non-interactive
                    exit 1
                  }
                  echo "Tests passed for $dir, displaying logs..."
                  ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key.pem ubuntu@$PUBLIC_IP "cat /tmp/user_data.log || echo 'No user_data.log'; cat /tmp/chef_output.txt || echo 'No chef_output.txt'; cat /tmp/nginx_check.txt || echo 'No nginx_check.txt'; cat /tmp/nginx_status.txt || echo 'No nginx_status.txt'"
                  echo "--------------------------------"
                  cd ../..
                else
                  echo "Skipping $dir (unchanged)"
                fi
              else
                echo "Skipping $dir (no terragrunt.hcl found)"
              fi
            done
          else
            echo "No directories found in live/. Skipping deployment."
          fi